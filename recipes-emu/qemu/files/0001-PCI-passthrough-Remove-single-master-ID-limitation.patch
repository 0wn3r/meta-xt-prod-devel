From 31326f1807f194e86f7b2005598ff5fe80776d59 Mon Sep 17 00:00:00 2001
From: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Date: Wed, 19 May 2021 15:48:39 +0300
Subject: [PATCH] PCI passthrough: Remove single master ID limitation

ZU+ hardware has a limitation in that the PCIe RC
marks all transactions with Master-ID 0x4d0. So it's impossible to
differentiate between end-point DMA's. This is the behaviour that
QEMU models by default. For the purpose of testing PCIe passthrough,
we can modify QEMU to remove the limitation of the single master-id.

Signed-off-by: Oleksandr Andrushchenko <oleksandr_andrushchenko@epam.com>
Suggested-by: Edgar E. Iglesias <edgar.iglesias@xilinx.com>
---
 include/hw/pci/pci.h | 11 +++++++++--
 1 file changed, 9 insertions(+), 2 deletions(-)

diff --git a/include/hw/pci/pci.h b/include/hw/pci/pci.h
index f08b72f89710..11bc3f556ca5 100644
--- a/include/hw/pci/pci.h
+++ b/include/hw/pci/pci.h
@@ -794,7 +794,9 @@ static inline AddressSpace *pci_get_address_space(PCIDevice *dev)
 static inline int pci_dma_rw(PCIDevice *dev, dma_addr_t addr,
                              void *buf, dma_addr_t len, DMADirection dir)
 {
-    dma_memory_rw(pci_get_address_space(dev), addr, buf, len, dir);
+    MemTxAttrs attr = MEMTXATTRS_UNSPECIFIED;
+    attr.requester_id = pci_requester_id(dev);
+    dma_memory_rw_attr(pci_get_address_space(dev), addr, buf, len, dir, attr);
     return 0;
 }
 
@@ -835,9 +837,14 @@ PCI_DMA_DEFINE_LDST(q_be, q_be, 64);
 static inline void *pci_dma_map(PCIDevice *dev, dma_addr_t addr,
                                 dma_addr_t *plen, DMADirection dir)
 {
+    MemTxAttrs attr = MEMTXATTRS_UNSPECIFIED;
+    attr.requester_id = pci_requester_id(dev);
+    hwaddr xlen = *plen;
     void *buf;
 
-    buf = dma_memory_map(pci_get_address_space(dev), addr, plen, dir);
+    buf = address_space_map(pci_get_address_space(dev), addr, &xlen,
+                            dir == DMA_DIRECTION_FROM_DEVICE, attr);
+    *plen = xlen;
     return buf;
 }
 
-- 
2.31.1

